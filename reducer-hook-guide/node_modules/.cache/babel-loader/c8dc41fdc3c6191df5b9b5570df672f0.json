{"ast":null,"code":"var _jsxFileName = \"G:\\\\Coding\\\\Projects_Main\\\\Beginner\\\\Udemy-React\\\\reducer-hook-guide\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {}\n});\n\nconst AuthContextProvider = () => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["G:/Coding/Projects_Main/Beginner/Udemy-React/reducer-hook-guide/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","AuthContextProvider","setIsLoggedIn","logoutHandler","loginHandler","props","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,UAAU,EAAE,KAD0B;AAEtCC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAFoB,CAApB,CAApB;;AAKA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACF,UAAD,EAAaG,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMO,aAAa,GAAG,MAAM;AACxBD,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD;;AAGA,QAAME,YAAY,GAAG,MAAM,CAAE,CAA7B;;AACA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAA,cAAuBC,KAAK,CAACC;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CARD;;GAAML,mB;;KAAAA,mB;AAUN,eAAeJ,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n  isLoggedIn: false,\r\n  onLogout: () => {},\r\n});\r\n\r\nconst AuthContextProvider = () => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const logoutHandler = () => {\r\n        setIsLoggedIn(false);\r\n    };\r\n    const loginHandler = () => {};\r\n    return <AuthContext.Provider>{props.children}</AuthContext.Provider>\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}