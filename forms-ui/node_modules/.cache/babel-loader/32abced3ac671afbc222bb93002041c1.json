{"ast":null,"code":"var _jsxFileName = \"G:\\\\Coding\\\\Projects_Main\\\\Beginner\\\\Udemy-React\\\\forms-ui\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: enteredFirstName,\n    isFirstNameValid: enteredFirstNameIsValid,\n    hasError: firstNameInputError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstNameInput\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredLastName,\n    isFirstNameValid: enteredLastNameIsValid,\n    hasError: lastNameInputError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isFirstNameValid: enteredEmailIsValid,\n    hasError: emailInputError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput\n  } = useInput(value => value.includes(\"@\"));\n  let formIsValid = false;\n\n  if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredFirstNameIsValid && !enteredLastNameIsValid && enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredFirstName);\n    console.log(enteredLastName);\n    console.log(enteredEmail);\n    resetFirstNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  };\n\n  const firstNameInputClasses = firstNameInputError ? \"form-control invalid\" : \"form-control\";\n  const lastNameInputClasses = lastNameInputError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: firstNameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), firstNameInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"First name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), lastNameInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last name must not be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), emailInputError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid E-mail.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"4+aWaoCckF7c0vKnHNyIuJk1rSw=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"sources":["G:/Coding/Projects_Main/Beginner/Udemy-React/forms-ui/src/components/BasicForm.js"],"names":["useInput","BasicForm","props","value","enteredFirstName","isFirstNameValid","enteredFirstNameIsValid","hasError","firstNameInputError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstNameInput","trim","enteredLastName","enteredLastNameIsValid","lastNameInputError","lastNameChangeHandler","lastNameBlurHandler","resetLastNameInput","enteredEmail","enteredEmailIsValid","emailInputError","emailChangeHandler","emailBlurHandler","resetEmailInput","includes","formIsValid","formSubmissionHandler","event","preventDefault","console","log","firstNameInputClasses","lastNameInputClasses","emailInputClasses"],"mappings":"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","sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredFirstName,\n    isFirstNameValid: enteredFirstNameIsValid,\n    hasError: firstNameInputError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n  const {\n    value: enteredLastName,\n    isFirstNameValid: enteredLastNameIsValid,\n    hasError: lastNameInputError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastNameInput,\n  } = useInput((value) => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isFirstNameValid: enteredEmailIsValid,\n    hasError: emailInputError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmailInput,\n  } = useInput((value) => value.includes(\"@\"));\n\n  let formIsValid = false;\n\n  if (\n    enteredFirstNameIsValid &&\n    enteredLastNameIsValid &&\n    enteredEmailIsValid\n  ) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (\n      !enteredFirstNameIsValid &&\n      !enteredLastNameIsValid &&\n      enteredEmailIsValid\n    ) {\n      return;\n    }\n    console.log(enteredFirstName);\n    console.log(enteredLastName);\n    console.log(enteredEmail);\n\n    resetFirstNameInput();\n    resetLastNameInput();\n    resetEmailInput();\n  };\n\n  const firstNameInputClasses = firstNameInputError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const lastNameInputClasses = lastNameInputError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailInputError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={firstNameInputClasses}>\n        <div className={firstNameInputClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n            value={enteredFirstName}\n          />\n          {firstNameInputError && (\n            <p className=\"error-text\">First name must not be empty</p>\n          )}\n        </div>\n        <div className={lastNameInputClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n            value={enteredLastName}\n          />\n          {lastNameInputError && (\n            <p className=\"error-text\">Last name must not be empty</p>\n          )}\n        </div>\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">E-Mail Address</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputError && (\n          <p className=\"error-text\">Please enter a valid E-mail.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"]},"metadata":{},"sourceType":"module"}